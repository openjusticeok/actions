name: 'Tofu Plan & Apply for GCP'

on:
  workflow_call:
    inputs:
      gcp_project_id:
        description: 'The GCP project ID.'
        required: true
        type: string
      gcp_wif_provider:
        description: 'The full resource name of the WIF provider for Github Actions.'
        required: true
        type: string
      gcp_service_account:
        description: 'The service account email for the Github Actions workflow to use.'
        required: true
        type: string
      gcp_state_bucket_name:
        description: 'The name of the GCS bucket for Tofu state.'
        required: true
        type: string
      working_directory:
        description: 'The directory where the Tofu commands will be run.'
        required: true
        type: string
 
jobs:
  tofu:
    name: 'Tofu Plan & Apply'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write      # Required for Workload Identity Federation
      pull-requests: write # Required to post comments on PRs

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Tofu
        uses: opentofu/setup-opentofu@v1

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ inputs.gcp_project_id }}
          workload_identity_provider: ${{ inputs.gcp_wif_provider }}
          service_account: ${{ inputs.gcp_service_account }}

      - name: Tofu Init
        working-directory: ${{ inputs.working_directory }}
        run: |
          tofu init \
            -backend-config="bucket=${{ inputs.gcp_state_bucket_name }}" \
            -upgrade

      # This step only runs on pull requests. It generates a plan and saves it to a file.
      - name: Tofu Plan
        id: plan
        working-directory: ${{ inputs.working_directory }}
        run: tofu plan -no-color -out=plan.tfplan
        if: github.event_name == 'pull_request'
        # Continue even if the plan has changes, which would otherwise cause an exit code 2
        continue-on-error: true

      # This step takes the plan file and formats it for the comment.
      - name: Tofu Show
        id: show
        working-directory: ${{ inputs.working_directory }}
        run: tofu show -no-color plan.tfplan
        if: steps.plan.outcome == 'success' && github.event_name == 'pull_request'

      # This step uses the output from the 'show' step to create a comment on the PR.
      - name: Post Plan to PR
        uses: actions/github-script@v7
        if: steps.plan.outcome == 'success' && github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.show.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### OpenTofu Plan ðŸ“–
            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # This step checks the exit code of the plan to see if there are changes.
      - name: Check Plan Exit Code
        run: exit ${{ steps.plan.exit-code }}
        if: steps.plan.outcome == 'success' && github.event_name == 'pull_request'

      # This step runs on a push to main OR a manual dispatch.
      - name: Tofu Apply
        working-directory: ${{ inputs.working_directory }}
        run: tofu apply -auto-approve -no-color
        if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main')

